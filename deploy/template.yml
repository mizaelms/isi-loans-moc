kind: Template
apiVersion: v1
labels:
  template: maven-spring-boot
  template.version: '0.1'
parameters:
- name: APP_NAME
  required: true
- name: IMAGE_NAME
  required: true
- name: APP_VERSION
  required: true
- name: DOCKER_REGISTRY
  required: true
- name: DOCKER_NAMESPACE
  required: true
- name: ENV_NAME
  required: true
- name: ENV_CATEGORY_LOWERCASE
  required: true
- name: MEMORY_LIMIT
  required: true
  value: 1Gi
- name: REPLICAS
  required: true
- name: ACTIVE
  required: true
  value: '1'
objects:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
  metadata:
    name: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
    annotations:
      description: The application's http port.
- kind: Route
  apiVersion: v1
  id: "${APP_NAME}-http"
  metadata:
    name: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
    annotations:
      description: Route for application's http service.
  spec:
    to:
      name: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
  spec:
    strategy:
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxSurge: "25%"
        maxUnavailable: "25%"
      type: Rolling
    triggers: []
    replicas: ${{REPLICAS}}
    selector:
      deploymentConfig: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
    template:
      metadata:
        name: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
        labels:
          deploymentConfig: "${APP_NAME}-${ENV_CATEGORY_LOWERCASE}"
      spec:
        terminationGracePeriodSeconds: 75
        containers:
        - name: "${APP_NAME}"
          image: "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${IMAGE_NAME}:${APP_VERSION}"
          imagePullPolicy: Always
          env:
            - name: ACTIVE
              value: "${ACTIVE}"
            - name: ENV
              value: "${ENV_NAME}"
            - name: VERSION
              value: "${APP_VERSION}"
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
